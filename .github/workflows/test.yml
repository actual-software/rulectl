name: Test Suite

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  installer-tests:
    name: Run Installer Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install docker-compose
        run: |
          # GitHub Actions runners come with docker compose plugin, but not standalone docker-compose
          # Create a symlink for compatibility with existing Makefile
          sudo ln -sf /usr/libexec/docker/cli-plugins/docker-compose /usr/local/bin/docker-compose
          docker-compose version

      - name: Run installer tests
        working-directory: tests/installer
        run: |
          echo "Running installer tests..."
          make test-linux

      - name: Clean up Docker resources
        if: always()
        working-directory: tests/installer
        run: |
          make clean

  python-tests:
    name: Run Python Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run Python tests
        run: |
          # Check if tests directory exists and has test files
          if [ -d "tests" ] && find tests -name "test_*.py" -type f | grep -q .; then
            echo "Found Python test files, running pytest..."
            python -m pytest tests/ -v --tb=short
          else
            echo "No Python test files found, skipping pytest"
            exit 0
          fi

  # Add this job to act as a required check that depends on all test jobs
  all-tests:
    name: All Tests Passed
    permissions: {}
    runs-on: ubuntu-latest
    needs: [installer-tests, python-tests]
    if: always()
    steps:
      - name: Check test results
        run: |
          if [[ "${{ needs.installer-tests.result }}" != "success" ]]; then
            echo "❌ Tests failed - installer-tests: ${{ needs.installer-tests.result }}"
            exit 1
          fi
          if [[ "${{ needs.python-tests.result }}" != "success" ]]; then
            echo "❌ Tests failed - python-tests: ${{ needs.python-tests.result }}"
            exit 1
          fi
          echo "✅ All tests passed successfully!"